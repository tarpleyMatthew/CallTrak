----------------------------------------------------------------------------------------------------------------
--
#Original Author:        MWT                            #
#Date Created:           11/9/2023                      #
#Version:                                               #
#Date Last Modified:                                    #
#Modified by:                                           #
#Modification log:           
				Main thing now is make the UI stable on different screen sizes
				it doesnt have to be fully mobile responsive but at least handle some common bigger
				screensizes okay.

				Then I can work on formating the dashboard and editor a bit within that

				I would like to add two things as after:

					a way to maintain state between reloads when setting the filter I was pretty close but I need to 
					do something to handle 0-0-0-0 values when it posts better.

					editing hours changing the delete hours to edit hours and modify the modal to handle that

				Those could be after adding the admin area, but I still need Admin area to be able to update CT properties
				the ability to archive CTs, and the hours area (see peoples hours per client ect).

				After all that then login capabilites

				for now just work on making the UI stable and formating the editor and dashboard a bit.

				notes for later on how I was thinking to handle the state within the select element: 
					 <select name="filterArray"
                            asp-items="@(Model.SelectedFilters == null ? new SelectList(Model.Employees, "EmployeeID", "FirstName") : null )" class="form-control">
                        @{
                            int sumfilts = 0;
                            if (Model.SelectedFilters != null)
                            {
                                
                                foreach (int num in Model.SelectedFilters)
                                {
                                    sumfilts += num;
                                }
                            }
                        }

                        @if (Model.SelectedFilters != null && Model.SelectedFilters.Length > 0 && sumfilts > 0)
                        {
                            <option value="0" selected>All</option>
                            foreach (var employee in Model.Employees)
                            {
                                <option value="@employee.EmployeeID" selected="@(Model.SelectedFilters.Contains(employee.EmployeeID) ? "selected" : "")">
                                    @employee.FirstName
                                </option>
                            } 
                        }
                        else
                        {
                            <option value="0" selected>All</option>
                        }
                        }
                    </select>



 --
------------------------------------------------------------------------------------------------------------------>